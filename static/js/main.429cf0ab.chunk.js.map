{"version":3,"sources":["hooks/useLunch.tsx","utils/index.tsx","App.tsx","index.tsx"],"names":["DEAFULT_LUNCH_LIST","index","name","sleep","time","a","Promise","resolve","setTimeout","random","list","length","Math","floor","isThisWeek","lastSunday","moment","subtract","weekday","isAfter","App","useState","result","setResult","isEditVisible","setIsEditVisible","isCreateVisible","setIsCreateVisible","inputValue","setInputValue","currentLunch","setCurrentLunch","isLoading","setIsLoading","useLocalStorageState","lunchList","setLunchList","insertLunch","maxId","max","map","item","deleteLunch","filter","updateLunch","insertTime","lastTime","resetTime","useLunch","getResult","lunch","indexList","i","valueOf","className","Item","extra","onClick","color","round","style","marginLeft","visible","actions","key","text","content","placeholder","value","onChange","loading","ReactDOM","render","document","getElementById"],"mappings":"+QAMaA,EAAqB,CAChC,CAAEC,MAAO,EAAGC,KAAM,sBAClB,CAAED,MAAO,EAAGC,KAAM,4BAClB,CAAED,MAAO,EAAGC,KAAM,sBAClB,CAAED,MAAO,EAAGC,KAAM,4BAClB,CAAED,MAAO,EAAGC,KAAM,6B,qBCRb,SAAeC,EAAtB,kC,4CAAO,WAAqBC,GAArB,SAAAC,EAAA,+EACE,IAAIC,SAAQ,SAACC,GAAD,OACjBC,YAAW,WACTD,EAAQ,aACPH,OAJA,4C,sBAQA,SAASK,EAAOC,GACrB,OAAoB,IAAhBA,EAAKC,OAAqB,EAEvBD,EADOE,KAAKC,MAAMD,KAAKH,SAAWC,EAAKC,SAIzC,SAASG,EAAWV,GACzB,IAAMW,EAAaC,MAASC,SAASD,MAASE,UAAW,QACzD,OAAOF,IAAOZ,GAAMe,QAAQJ,EAAY,Q,kBCZ3B,SAASK,IACtB,MAA4BC,oBAAkB,GAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAwCR,qBAAxC,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EFDa,WACb,MAAkCC,YAChC,aACAlC,GAFF,mBAAOmC,EAAP,KAAkBC,EAAlB,KAgDA,MAAO,CACLD,YACAE,YA7CkB,SAACnC,GACnB,IAAMoC,EAAQ1B,KAAK2B,IAAL,MAAA3B,KAAI,YAAQuB,EAAUK,KAAI,SAACC,GAAD,OAAUA,EAAKxC,WACvDmC,GAAa,SAAC1B,GAAD,OACXA,EAAI,sBAAOA,GAAP,CAAa,CAAET,MAAOqC,EAAQ,EAAGpC,KAAMA,KAAU,OA2CvDwC,YAvCkB,SAACzC,GACnBmC,GAAa,SAAC1B,GAAD,OACXA,EAAOA,EAAKiC,QAAO,SAACF,GAAD,OAAUA,EAAKxC,QAAUA,KAAS,OAsCvD2C,YAlCkB,SAAC3C,EAAeC,GAClCkC,GAAa,SAAC1B,GACZ,OAAKA,EACEA,EAAK8B,KAAI,SAACC,GAIf,OAHIA,EAAKxC,QAAUA,IACjBwC,EAAKvC,KAAOA,GAEPuC,KALS,OAiCpBI,WAvBiB,SAAC5C,EAAeG,GACjCgC,GAAa,SAAC1B,GACZ,OAAKA,EACEA,EAAK8B,KAAI,SAACC,GACf,OAAIA,EAAKxC,QAAUA,EAAc,2BAAKwC,GAAZ,IAAkBK,SAAU1C,IAC1CqC,KAHI,OAsBpBM,UAfgB,WAChBX,GAAa,SAAC1B,GACZ,OAAKA,EACEA,EAAK8B,KAAI,SAACC,GAEf,MAAO,CAAExC,MADewC,EAAhBxC,MACQC,KADQuC,EAATvC,SAFC,QElClB8C,GANFb,EADF,EACEA,UACAE,EAFF,EAEEA,YACAK,EAHF,EAGEA,YACAE,EAJF,EAIEA,YACAC,EALF,EAKEA,WACAE,EANF,EAMEA,UAGIE,EAAS,uCAAG,kCAAA5C,EAAA,sDAChB4B,GAAa,GACPvB,EAAOyB,EAAUQ,QAAO,SAACO,GAC7B,OAAKA,EAAMJ,WACPhC,EAAWoC,EAAMJ,aAGjBK,EAAYzC,EAAK8B,KAAI,SAACC,GAAD,OAAUA,EAAKxC,SACtCA,EAAQQ,EAAO0C,GACVC,EAAI,EATG,YASAA,EAAI,IATJ,wBAUdnD,EAAQQ,EAAO0C,GACf5B,EAAUtB,GAXI,UAYRE,EAAM,KAZE,QASQiD,IATR,uBAchBP,EAAW5C,EAAOe,MAASqC,WAC3BpB,GAAa,GAfG,4CAAH,qDAkBf,OACE,sBAAKqB,UAAU,MAAf,UACE,eAAC,IAAD,CAAOA,UAAU,SAAjB,qCACOhC,GAAU,EAAIa,EAAUb,GAAQpB,KAAO,OAE9C,cAAC,IAAD,CAAMoD,UAAU,UAAhB,SACGnB,EAAUK,KAAI,SAACU,GACd,OACE,eAAC,IAAKK,KAAN,CAEEC,MACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,QAAS,WACP1B,EAAgBmB,GAChBrB,EAAcqB,EAAMhD,MACpBuB,GAAiB,IAJrB,0BASA,cAAC,IAAD,CACEiC,MAAM,SACND,QAAS,kBAAMf,EAAYQ,EAAMjD,QAFnC,6BAbN,UAsBGiD,EAAMhD,KACNgD,EAAMJ,UAAYhC,EAAWoC,EAAMJ,WAClC,cAAC,IAAD,CAAKa,OAAK,EAACD,MAAM,UAAUE,MAAO,CAAEC,WAAY,GAAhD,wCAvBGX,EAAMjD,YA+BnB,cAAC,IAAD,CACE6D,QAAStC,EACTuC,QAAS,CACP,CACEC,IAAK,UACLC,KAAM,eACNR,QAAS,WACF7B,GACAE,IACLc,EAAYd,EAAa7B,MAAO2B,GAChCH,GAAiB,MAGrB,CACEuC,IAAK,SACLC,KAAM,eACNR,QAAS,kBAAMhC,GAAiB,MAGpCyC,QACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,YAAa,6CACbC,MAAOxC,EACPyC,SAAU,SAACD,GAAD,OAAWvC,EAAcuC,UAK3C,cAAC,IAAD,CACEN,QAASpC,EACTqC,QAAS,CACP,CACEC,IAAK,UACLC,KAAM,eACNR,QAHF,WAIS7B,IACLS,EAAYT,GACZD,GAAmB,MAGvB,CACEqC,IAAK,SACLC,KAAM,eACNR,QAHF,WAII9B,GAAmB,MAIzBuC,QACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,YAAa,6CACbC,MAAOxC,EACPyC,SAAU,SAACD,GAAD,OAAWvC,EAAcuC,UAK3C,eAAC,IAAD,CAAOd,UAAU,SAAjB,UACE,cAAC,IAAD,CAAQG,QAAS,kBAAM9B,GAAmB,IAAO+B,MAAM,UAAvD,sCAGA,cAAC,IAAD,CAAQA,MAAM,UAAUD,QAASR,EAAWqB,QAAStC,EAArD,4CAGA,cAAC,IAAD,CAAQ0B,MAAM,UAAUD,QAASV,EAAjC,4CC9IRwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.429cf0ab.chunk.js","sourcesContent":["import { useLocalStorageState } from 'ahooks'\nexport interface Lunch {\n  index: number\n  name: string\n  lastTime?: number\n}\nexport const DEAFULT_LUNCH_LIST = [\n  { index: 0, name: '小喜田' },\n  { index: 1, name: '谷田稻香' },\n  { index: 2, name: '麦当劳' },\n  { index: 3, name: '胡子大厨' },\n  { index: 4, name: '家有好面' },\n]\nexport default function useLunch() {\n  const [lunchList, setLunchList] = useLocalStorageState<Lunch[]>(\n    'lunch-list',\n    DEAFULT_LUNCH_LIST\n  )\n  // 添加午餐\n  const insertLunch = (name: string) => {\n    const maxId = Math.max(...lunchList.map((item) => item.index))\n    setLunchList((list) =>\n      list ? [...list, { index: maxId + 1, name: name }] : []\n    )\n  }\n  // 删除午餐\n  const deleteLunch = (index: number) => {\n    setLunchList((list) =>\n      list ? list.filter((item) => item.index !== index) : []\n    )\n  }\n  // 修改午餐\n  const updateLunch = (index: number, name: string) => {\n    setLunchList((list) => {\n      if (!list) return []\n      return list.map((item) => {\n        if (item.index === index) {\n          item.name = name\n        }\n        return item\n      })\n    })\n  }\n  // 添加时间\n  const insertTime = (index: number, time: number) => {\n    setLunchList((list) => {\n      if (!list) return []\n      return list.map((item) => {\n        if (item.index === index) return { ...item, lastTime: time }\n        else return item\n      })\n    })\n  }\n  const resetTime = () => {\n    setLunchList((list) => {\n      if (!list) return []\n      return list.map((item) => {\n        const { index, name } = item\n        return { index, name }\n      })\n    })\n  }\n  return {\n    lunchList,\n    insertLunch,\n    deleteLunch,\n    updateLunch,\n    insertTime,\n    resetTime,\n  }\n}\n","import moment from 'moment'\n\n// 睡眠函数\nexport async function sleep(time: number) {\n  return new Promise((resolve) =>\n    setTimeout(() => {\n      resolve('success')\n    }, time)\n  )\n}\n// 随机函数\nexport function random(list: number[]) {\n  if (list.length === 0) return 0\n  const index = Math.floor(Math.random() * list.length)\n  return list[index]\n}\n// 判断是否在本周内\nexport function isThisWeek(time: number) {\n  const lastSunday = moment().subtract(moment().weekday(), 'days')\n  return moment(time).isAfter(lastSunday, 'days')\n}\n","import { Button, Dialog, Input, List, Space, Tag } from 'antd-mobile'\nimport { useState } from 'react'\nimport useLunch, { Lunch } from './hooks/useLunch'\nimport { isThisWeek, random, sleep } from './utils'\nimport './App.scss'\nimport moment from 'moment'\n\nexport default function App() {\n  const [result, setResult] = useState<number>(-1)\n  const [isEditVisible, setIsEditVisible] = useState(false)\n  const [isCreateVisible, setIsCreateVisible] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const [currentLunch, setCurrentLunch] = useState<Lunch>()\n  const [isLoading, setIsLoading] = useState(false)\n  const {\n    lunchList,\n    insertLunch,\n    deleteLunch,\n    updateLunch,\n    insertTime,\n    resetTime,\n  } = useLunch()\n  // 获取随机数\n  const getResult = async () => {\n    setIsLoading(true)\n    const list = lunchList.filter((lunch) => {\n      if (!lunch.lastTime) return true\n      if (isThisWeek(lunch.lastTime)) return false\n      return true\n    })\n    const indexList = list.map((item) => item.index)\n    let index = random(indexList)\n    for (let i = 0; i < 10; i++) {\n      index = random(indexList)\n      setResult(index)\n      await sleep(100)\n    }\n    insertTime(index, moment().valueOf())\n    setIsLoading(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <Space className=\"header\">\n        中午吃：{result >= 0 ? lunchList[result].name : '?'}\n      </Space>\n      <List className=\"content\">\n        {lunchList.map((lunch) => {\n          return (\n            <List.Item\n              key={lunch.index}\n              extra={\n                <Space>\n                  <Button\n                    onClick={() => {\n                      setCurrentLunch(lunch)\n                      setInputValue(lunch.name)\n                      setIsEditVisible(true)\n                    }}\n                  >\n                    修改\n                  </Button>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => deleteLunch(lunch.index)}\n                  >\n                    删除\n                  </Button>\n                </Space>\n              }\n            >\n              {lunch.name}\n              {lunch.lastTime && isThisWeek(lunch.lastTime) && (\n                <Tag round color=\"success\" style={{ marginLeft: 8 }}>\n                  本周吃过\n                </Tag>\n              )}\n            </List.Item>\n          )\n        })}\n      </List>\n      <Dialog\n        visible={isEditVisible}\n        actions={[\n          {\n            key: 'confirm',\n            text: '确定',\n            onClick: () => {\n              if (!inputValue) return\n              if (!currentLunch) return\n              updateLunch(currentLunch.index, inputValue)\n              setIsEditVisible(false)\n            },\n          },\n          {\n            key: 'cancel',\n            text: '取消',\n            onClick: () => setIsEditVisible(false),\n          },\n        ]}\n        content={\n          <Space>\n            <Input\n              placeholder={'请输入餐厅名称'}\n              value={inputValue}\n              onChange={(value) => setInputValue(value)}\n            />\n          </Space>\n        }\n      />\n      <Dialog\n        visible={isCreateVisible}\n        actions={[\n          {\n            key: 'confirm',\n            text: '确定',\n            onClick() {\n              if (!inputValue) return\n              insertLunch(inputValue)\n              setIsCreateVisible(false)\n            },\n          },\n          {\n            key: 'cancel',\n            text: '取消',\n            onClick() {\n              setIsCreateVisible(false)\n            },\n          },\n        ]}\n        content={\n          <Space>\n            <Input\n              placeholder={'请输入餐厅名称'}\n              value={inputValue}\n              onChange={(value) => setInputValue(value)}\n            />\n          </Space>\n        }\n      />\n      <Space className=\"footer\">\n        <Button onClick={() => setIsCreateVisible(true)} color=\"success\">\n          增加选项\n        </Button>\n        <Button color=\"primary\" onClick={getResult} loading={isLoading}>\n          中午吃什么\n        </Button>\n        <Button color=\"warning\" onClick={resetTime}>\n          重置时间\n        </Button>\n      </Space>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}