{"version":3,"sources":["hooks/useLunch.tsx","utils/index.tsx","App.tsx","index.tsx"],"names":["DEAFULT_LUNCH_LIST","index","name","sleep","time","a","Promise","resolve","setTimeout","App","useState","result","setResult","isEditVisible","setIsEditVisible","isCreateVisible","setIsCreateVisible","inputValue","setInputValue","currentLunch","setCurrentLunch","useLocalStorageState","lunchList","setLunchList","insertLunch","maxId","Math","max","map","item","list","deleteLunch","filter","updateLunch","useLunch","getResult","i","length","floor","random","className","lunch","Item","extra","onClick","color","visible","actions","key","text","content","placeholder","value","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d1a759f.chunk.js","sourcesContent":["import { useLocalStorageState } from 'ahooks'\nexport interface Lunch {\n  index: number\n  name: string\n}\n\nexport const DEAFULT_LUNCH_LIST = [\n  { index: 0, name: '小喜田' },\n  { index: 1, name: '谷田稻香' },\n  { index: 2, name: '麦当劳' },\n  { index: 3, name: '胡子大厨' },\n  { index: 4, name: '家有好面' },\n]\nexport default function useLunch() {\n  const [lunchList, setLunchList] = useLocalStorageState<Lunch[]>(\n    'lunch-list',\n    DEAFULT_LUNCH_LIST\n  )\n  // 添加午餐\n  const insertLunch = (name: string) => {\n    const maxId = Math.max(...lunchList.map((item) => item.index))\n    setLunchList((list) =>\n      list ? [...list, { index: maxId + 1, name: name }] : []\n    )\n  }\n  // 删除午餐\n  const deleteLunch = (index: number) => {\n    setLunchList((list) =>\n      list ? list.filter((item) => item.index !== index) : []\n    )\n  }\n  // 修改午餐\n  const updateLunch = (index: number, name: string) => {\n    setLunchList((list) => {\n      if (!list) return []\n      return list.map((item) => {\n        if (item.index === index) {\n          item.name = name\n        }\n        return item\n      })\n    })\n  }\n  return {\n    lunchList,\n    insertLunch,\n    deleteLunch,\n    updateLunch,\n  }\n}\n","// 睡眠函数\nexport async function sleep(time: number) {\n  return new Promise((resolve) =>\n    setTimeout(() => {\n      resolve('success')\n    }, time)\n  )\n}\n// 随机函数\nexport function random(max: number) {\n  return Math.floor(Math.random() * max)\n}\n","import { Button, Dialog, Input, List, Space } from 'antd-mobile'\nimport { useState } from 'react'\nimport useLunch, { Lunch } from './hooks/useLunch'\nimport { random, sleep } from './utils'\nimport './App.scss'\n\n\nexport default function App() {\n  const [result, setResult] = useState<string>('?')\n  const [isEditVisible, setIsEditVisible] = useState(false)\n  const [isCreateVisible, setIsCreateVisible] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const [currentLunch, setCurrentLunch] = useState<Lunch>()\n  const { lunchList, insertLunch, deleteLunch, updateLunch } = useLunch()\n  // 获取随机数\n  const getResult = async () => {\n    for (let i = 0; i < 10; i++) {\n      const index = random(lunchList.length)\n      setResult(lunchList[index].name)\n      await sleep(100)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Space className=\"top\">中午吃：{result}</Space>\n      <List>\n        {lunchList.map((lunch) => {\n          return (\n            <List.Item\n              key={lunch.index}\n              extra={\n                <Space>\n                  <Button\n                    onClick={() => {\n                      setCurrentLunch(lunch)\n                      setInputValue(lunch.name)\n                      setIsEditVisible(true)\n                    }}\n                  >\n                    修改\n                  </Button>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => deleteLunch(lunch.index)}\n                  >\n                    删除\n                  </Button>\n                </Space>\n              }\n            >\n              {lunch.name}\n            </List.Item>\n          )\n        })}\n      </List>\n      <Dialog\n        visible={isEditVisible}\n        actions={[\n          {\n            key: 'confirm',\n            text: '确定',\n            onClick: () => {\n              if (!inputValue) return\n              if (!currentLunch) return\n              updateLunch(currentLunch.index, inputValue)\n              setIsEditVisible(false)\n            },\n          },\n          {\n            key: 'cancel',\n            text: '取消',\n            onClick: () => setIsEditVisible(false),\n          },\n        ]}\n        content={\n          <Space>\n            <Input\n              placeholder={'请输入餐厅名称'}\n              value={inputValue}\n              onChange={(value) => setInputValue(value)}\n            />\n          </Space>\n        }\n      />\n      <Dialog\n        visible={isCreateVisible}\n        actions={[\n          {\n            key: 'confirm',\n            text: '确定',\n            onClick() {\n              if (!inputValue) return\n              insertLunch(inputValue)\n              setIsCreateVisible(false)\n            },\n          },\n          {\n            key: 'cancel',\n            text: '取消',\n            onClick() {\n              setIsCreateVisible(false)\n            },\n          },\n        ]}\n        content={\n          <Space>\n            <Input\n              placeholder={'请输入餐厅名称'}\n              value={inputValue}\n              onChange={(value) => setInputValue(value)}\n            />\n          </Space>\n        }\n      />\n      <Space className=\"bottom\">\n        <Button\n          onClick={() => {\n            setIsCreateVisible(true)\n          }}\n          color=\"success\"\n        >\n          增加选项\n        </Button>\n        <Button color=\"primary\" onClick={getResult}>\n          中午吃什么\n        </Button>\n      </Space>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}