{"version":3,"sources":["App.tsx","index.tsx"],"names":["DEAFULT_LUNCH_LIST","index","name","sleep","time","a","Promise","resolve","setTimeout","App","useLocalStorageState","lunchList","setLunchList","useState","result","setResult","isEditVisible","setIsEditVisible","isCreateVisible","setIsCreateVisible","inputValue","setInputValue","currentLunch","setCurrentLunch","getResult","i","max","length","Math","floor","random","className","map","lunch","Item","extra","onClick","color","list","filter","item","visible","actions","key","text","content","placeholder","value","onChange","maxId","insertLunch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb8abf50.chunk.js","sourcesContent":["import { useLocalStorageState } from 'ahooks'\nimport { Button, Dialog, Input, List, Space } from 'antd-mobile'\nimport { useState } from 'react'\nimport './App.scss'\ninterface Lunch {\n  index: number\n  name: string\n}\n\nexport const DEAFULT_LUNCH_LIST = [\n  { index: 0, name: '小喜田' },\n  { index: 1, name: '谷田稻香' },\n]\n// 睡眠函数\nexport async function sleep(time: number) {\n  return new Promise((resolve) =>\n    setTimeout(() => {\n      resolve('success')\n    }, time)\n  )\n}\nexport function random(max: number) {\n  return Math.floor(Math.random() * max)\n}\nexport default function App() {\n  const [lunchList, setLunchList] = useLocalStorageState<Lunch[]>('lunch-list', DEAFULT_LUNCH_LIST)\n  const [result, setResult] = useState<string>('?')\n  const [isEditVisible, setIsEditVisible] = useState(false)\n  const [isCreateVisible, setIsCreateVisible] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const [currentLunch, setCurrentLunch] = useState<Lunch>()\n\n  // 获取随机数\n  const getResult = async () => {\n    for (let i = 0; i < 10; i++) {\n      const index = random(lunchList.length)\n      setResult(lunchList[index].name)\n      await sleep(100)\n    }\n  }\n  // 添加午餐\n  const insertLunch = (name: string) => {\n    const maxId = Math.max(...lunchList.map((item) => item.index))\n    setLunchList((list) => (list ? [...list, { index: maxId + 1, name: name }] : []))\n  }\n  // 删除午餐\n  const deleteLunch = (index: number) => {\n    setLunchList((list) => (list ? list.filter((item) => item.index !== index) : []))\n  }\n  // 修改午餐\n  const updateLunch = (index: number, name: string) => {\n    setLunchList((list) => {\n      if (!list) return []\n      return list.map((item) => {\n        if (item.index === index) {\n          item.name = name\n        }\n        return item\n      })\n    })\n  }\n  return (\n    <div className=\"App\">\n      <Space className=\"top\">中午吃：{result}</Space>\n      <List>\n        {lunchList.map((lunch) => {\n          return (\n            <List.Item\n              key={lunch.index}\n              extra={\n                <Space>\n                  <Button\n                    onClick={() => {\n                      setCurrentLunch(lunch)\n                      setInputValue(lunch.name)\n                      setIsEditVisible(true)\n                    }}\n                  >\n                    修改\n                  </Button>\n                  <Button color=\"danger\" onClick={() => deleteLunch(lunch.index)}>\n                    删除\n                  </Button>\n                </Space>\n              }\n            >\n              {lunch.name}\n            </List.Item>\n          )\n        })}\n      </List>\n      <Dialog\n        visible={isEditVisible}\n        actions={[\n          {\n            key: 'confirm',\n            text: '确定',\n            onClick: () => {\n              if (!inputValue) return\n              if (!currentLunch) return\n              updateLunch(currentLunch.index, inputValue)\n              setIsEditVisible(false)\n            },\n          },\n          { key: 'cancel', text: '取消', onClick: () => setIsEditVisible(false) },\n        ]}\n        content={\n          <Space>\n            <Input placeholder={'请输入餐厅名称'} value={inputValue} onChange={(value) => setInputValue(value)} />\n          </Space>\n        }\n      />\n      <Dialog\n        visible={isCreateVisible}\n        actions={[\n          {\n            key: 'confirm',\n            text: '确定',\n            onClick() {\n              if (!inputValue) return\n              insertLunch(inputValue)\n              setIsCreateVisible(false)\n            },\n          },\n          {\n            key: 'cancel',\n            text: '取消',\n            onClick() {\n              setIsCreateVisible(false)\n            },\n          },\n        ]}\n        content={\n          <Space>\n            <Input placeholder={'请输入餐厅名称'} value={inputValue} onChange={(value) => setInputValue(value)} />\n          </Space>\n        }\n      />\n      <Space className=\"bottom\">\n        <Button\n          onClick={() => {\n            setIsCreateVisible(true)\n          }}\n          color=\"success\"\n        >\n          增加选项\n        </Button>\n        <Button color=\"primary\" onClick={getResult}>\n          中午吃什么\n        </Button>\n      </Space>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}